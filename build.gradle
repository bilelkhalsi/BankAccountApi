plugins {
    id "java"
    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "idea"
}

apply plugin: 'io.spring.dependency-management'

targetCompatibility = 11

repositories {
    mavenCentral()
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {
    // spring
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-devtools")

    // reactive
    implementation("io.reactivex.rxjava2:rxjava:2.2.6")

    // immutable/reactive/functional
    implementation("com.oath.cyclops:cyclops:10.1.1")
    compileOnly("org.immutables:value:2.7.4")
    implementation("org.immutables:mongo:2.7.4") //  compile + run time utilities.
    annotationProcessor("org.immutables:value:2.7.4")

    // swagger
    implementation("io.springfox:springfox-swagger2:3.0.0-SNAPSHOT")
    implementation("io.springfox:springfox-spring-webflux:3.0.0-SNAPSHOT")
    implementation("io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT")


    // junit 5 / test-containers / rest-assured / mockito
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.3.2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.3.2")
    testImplementation("org.testcontainers:testcontainers:1.10.3")
    testImplementation("org.testcontainers:junit-jupiter:1.10.5")
    testImplementation("io.rest-assured:rest-assured:3.2.0")
    testImplementation("org.mockito:mockito-core:2.24.0")
}

// Workaround for https://github.com/gradle/gradle/issues/4956
sourceSets.configureEach { sourceSet ->
    tasks.named(sourceSet.compileJavaTaskName).configure {
        options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/${sourceSet.name}")
    }
}

// Workaround for https://youtrack.jetbrains.com/issue/IDEA-182577
idea {
    module {
        sourceDirs += compileJava.options.annotationProcessorGeneratedSourcesDirectory
        generatedSourceDirs += compileJava.options.annotationProcessorGeneratedSourcesDirectory
        testSourceDirs += compileTestJava.options.annotationProcessorGeneratedSourcesDirectory
        generatedSourceDirs += compileTestJava.options.annotationProcessorGeneratedSourcesDirectory
    }
}



test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

processResources {
    expand(project.properties)
}